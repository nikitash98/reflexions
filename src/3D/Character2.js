/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/3D/Character2.glb 
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { createPortal } from '@react-three/fiber'
import { clone } from 'three/examples/jsm/utils/SkeletonUtils'
import { useMemo } from 'react'
import { useGraph } from '@react-three/fiber'
export function Model2(props) {
  const group = useRef()
  const { scene, materials, animations } = useGLTF('/3D/Character2.glb')
  const { actions } = useAnimations(animations, group)
  const cl = useMemo(() => clone(scene), [scene])
  const { nodes } = useGraph(cl)

  useEffect(()=> {
    if(props.animation == 1) {
        actions["Handshake"].play();
    }
    if(props.animation == 0) {
        actions["Idle"].play();
    }
    if(props.animation == 2) {
        actions["Strut"].play();
    }



  }, [props.animation])

  return (
    <>
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="MocapGuy_HiRes_Meshes" rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips}  />
          <skinnedMesh name="MocapGuy_Body" geometry={nodes.MocapGuy_Body.geometry} material={nodes.MocapGuy_Body.material} skeleton={nodes.MocapGuy_Body.skeleton} />
          <skinnedMesh name="MocapGuy_Caruncula" geometry={nodes.MocapGuy_Caruncula.geometry} material={nodes.MocapGuy_Caruncula.material} skeleton={nodes.MocapGuy_Caruncula.skeleton} />
          <skinnedMesh name="MocapGuy_Hat" geometry={nodes.MocapGuy_Hat.geometry} material={nodes.MocapGuy_Hat.material} skeleton={nodes.MocapGuy_Hat.skeleton} />
        </group>
      </group>
    </group>
    {createPortal(props.children, nodes.mixamorigHeadTop_End)}
    </>

  )
}

useGLTF.preload('/3D/Character2.glb')
